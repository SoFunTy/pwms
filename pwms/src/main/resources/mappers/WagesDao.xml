<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yx.pwms.dao.WagesDao">
    <resultMap id="Wages" type="com.yx.pwms.entity.Wages">
        <id column="WAGES_ID" property="wagesId" />
        <result column="EMPLOYEE_ID" property="employeeId" />
        <result column="RELEASE_TIME" property="releaseTime" />
        <result column="BASE_PAY" property="basePay" />
        <result column="POST_WAGE" property="postWage" />
        <result column="JXW" property="jxw" />
        <result column="ALLOWANCE" property="allowance" />
        <result column="BOUNS" property="bouns" />
        <result column="PENALTY" property="penalty" />
        <result column="E_INSURANCE" property="eInsurance" />
        <result column="I_INSURANCE" property="iInsurance" />
        <result column="U_INSURANCE" property="uInsurance" />
        <result column="W_INSURANCE" property="wInsurance" />
        <result column="M_INSURANCE" property="mInsurance" />
        <result column="HOUSING_FUND" property="housingFund" />
        <result column="IIT_FEELS_COLD" property="iitFeelsCold" />
        <result column="WAGE_DEDUCTED_TAX" property="wageDeductedTax" />
    </resultMap>
    <sql id="Wages_Column_List">
    WAGES_ID, EMPLOYEE_ID, RELEASE_TIME, BASE_PAY, POST_WAGE, JXW, ALLOWANCE, BOUNS,
    PENALTY, E_INSURANCE, I_INSURANCE, U_INSURANCE, W_INSURANCE, M_INSURANCE, HOUSING_FUND,
    IIT_FEELS_COLD, WAGE_DEDUCTED_TAX
  </sql>

    <delete id="deleteWages" parameterType="java.lang.Integer">
    delete from WAGES
    where WAGES_ID = #{wagesId}
    </delete>

    <select id="queryAll" resultType="java.util.HashMap">
        select
        WAGES_ID wagesId,WAGES.EMPLOYEE_ID employeeId, EMPLOYEE_NAME employeeName, RELEASE_TIME releaseTime,
        BASE_PAY basePay, POST_WAGE postWage, JXW jxw, ALLOWANCE allowance,
        BOUNS bouns, PENALTY penalty, E_INSURANCE eInsurance, I_INSURANCE iInsurance, U_INSURANCE uInsurance, W_INSURANCE wInsurance, M_INSURANCE mInsurance,
        HOUSING_FUND housingFund, IIT_FEELS_COLD iitFeelsCold, WAGE_DEDUCTED_TAX wageDeductedTax
        from WAGES,EMPLOYEE
        where WAGES.EMPLOYEE_ID = EMPLOYEE.EMPLOYEE_ID
    </select>

    <select id="stsatisThisYear" resultType="java.util.HashMap">
        SELECT DEPARTMENT_ID departmentId,DEPARTMENT_NAME departmentName,SUM(WAGE_DEDUCTED_TAX) total FROM WAGES E,
        (SELECT DEPARTMENT_ID,EMPLOYEE_ID,DEPARTMENT_NAME FROM EMPLOYEE C,
        (SELECT POSITION_ID,A.DEPARTMENT_ID,DEPARTMENT_NAME FROM POSITIONS A, DEPARTMENT B WHERE A.DEPARTMENT_ID = B.DEPARTMENT_ID) D
        WHERE C.POSITION_ID = D.POSITION_ID) F
        WHERE E.EMPLOYEE_ID = F.EMPLOYEE_ID
        AND date_format(RELEASE_TIME, '%Y') = date_format(curdate(), '%Y') group by DEPARTMENT_ID order by DEPARTMENT_ID;
    </select>
    <select id="stsatisThisMonth" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT DEPARTMENT_ID departmentId,DEPARTMENT_NAME departmentName,SUM(WAGE_DEDUCTED_TAX) total FROM WAGES E,
        (SELECT DEPARTMENT_ID,EMPLOYEE_ID,DEPARTMENT_NAME FROM EMPLOYEE C,
        (SELECT POSITION_ID,A.DEPARTMENT_ID,DEPARTMENT_NAME FROM POSITIONS A, DEPARTMENT B WHERE A.DEPARTMENT_ID = B.DEPARTMENT_ID) D
        WHERE C.POSITION_ID = D.POSITION_ID) F
        WHERE E.EMPLOYEE_ID = F.EMPLOYEE_ID
        AND date_format(RELEASE_TIME, '%Y-%m') = date_format(#{ntime}, '%Y-%m') group by DEPARTMENT_ID order by DEPARTMENT_ID;
    </select>


    <select id="queryMy" parameterType="java.lang.String" resultMap="Wages">
        select
        <include refid="Wages_Column_List"/>
        from WAGES
        where
         EMPLOYEE_ID = #{employeeId} and
         period_diff(date_format(curdate() , '%Y%m') , date_format(RELEASE_TIME, '%Y%m')) = 0;
    </select>

    <select id="queryList" parameterType="java.util.Map" resultMap="Wages">
        select
        <include refid="Wages_Column_List"/>
        from WAGES
        where 1=1
        <if test="wagesId != null">
            AND WAGES_ID = #{wagesId}
        </if>
        <if test="employeeId != null">
            AND EMPLOYEE_ID = #{employeeId}
        </if>
        <if test="releaseTime != null">
            AND PERIOD_DIFF(date_format(#{releaseTime}, '%Y%m' ) , date_format(RELEASE_TIME, '%Y%m' ) ) = 0
        </if>
        <if test="basePay != null">
            AND BASE_PAY = #{basePay}
        </if>
        <if test="postWage != null">
            AND POST_WAGE = #{postWage}
        </if>
        <if test="jxw != null">
            AND JXW = #{jxw}
        </if>
        <if test="allowance != null">
            AND ALLOWANCE = #{allowance}
        </if>
        <if test="bouns != null">
            AND BOUNS = #{bouns}
        </if>
        <if test="penalty != null">
            AND PENALTY = #{penalty}
        </if>
        <if test="eInsurance != null">
            AND E_INSURANCE = #{eInsurance}
        </if>
        <if test="iInsurance != null">
            AND I_INSURANCE = #{iInsurance}
        </if>
        <if test="uInsurance != null">
            AND U_INSURANCE = #{uInsurance}
        </if>
        <if test="wInsurance != null">
            AND W_INSURANCE = #{wInsurance}
        </if>
        <if test="mInsurance != null">
            AND M_INSURANCE = #{mInsurance}
        </if>
        <if test="housingFund != null">
            AND HOUSING_FUND = #{housingFund}
        </if>
        <if test="iitFeelsCold != null">
            AND IIT_FEELS_COLD = #{iitFeelsCold}
        </if>
        <if test="wageDeductedTax != null">
            AND WAGE_DEDUCTED_TAX = #{wageDeductedTax}
        </if>
    </select>

    <update id="updateWages" parameterType="java.util.Map">
        update WAGES
        <set>
            <if test="employeeId != null">
                EMPLOYEE_ID = #{employeeId},
            </if>
            <if test="releaseTime != null">
                RELEASE_TIME = #{releaseTime},
            </if>
            <if test="basePay != null">
                BASE_PAY = #{basePay},
            </if>
            <if test="postWage != null">
                POST_WAGE = #{postWage},
            </if>
            <if test="jxw != null">
                JXW = #{jxw},
            </if>
            <if test="allowance != null">
                ALLOWANCE = #{allowance},
            </if>
            <if test="bouns != null">
                BOUNS = #{bouns},
            </if>
            <if test="penalty != null">
                PENALTY = #{penalty},
            </if>
            <if test="eInsurance != null">
                E_INSURANCE = #{eInsurance},
            </if>
            <if test="iInsurance != null">
                I_INSURANCE = #{iInsurance},
            </if>
            <if test="uInsurance != null">
                U_INSURANCE = #{uInsurance},
            </if>
            <if test="wInsurance != null">
                W_INSURANCE = #{wInsurance},
            </if>
            <if test="mInsurance != null">
                M_INSURANCE = #{mInsurance},
            </if>
            <if test="housingFund != null">
                HOUSING_FUND = #{housingFund},
            </if>
            <if test="iitFeelsCold != null">
                IIT_FEELS_COLD = #{iitFeelsCold},
            </if>
            <if test="wageDeductedTax != null">
                WAGE_DEDUCTED_TAX = #{wageDeductedTax},
            </if>
        </set>
        where WAGES_ID = #{wagesId}
    </update>

    <insert id="insertNewWages" parameterType="java.lang.String">
        insert into WAGES (employee_id,bouns,penalty)
        select a.employee_id,reward,punishment from EMPLOYEE a left join (select employee_id,sum(reward) reward,sum(punishment) punishment FROM pwms.REWARD_AND_PUNISHMENT
        where PERIOD_DIFF(date_format(#{time}, '%Y%m' ) , date_format(recoding_time, '%Y%m' ) ) = 0
        group by employee_id) b on a.employee_id = b.employee_id;
    </insert>
    <update id="updateNewWagesTime" parameterType="java.lang.String">
        update WAGES set release_time = #{time} where release_time is null;
    </update>
    <update id="updateNewWagesBasePay" parameterType="java.lang.Double">
        update WAGES set base_pay = #{basePay} where base_pay = 0;
    </update>
    <update id="updateNewWagesJwx" parameterType="java.lang.Double">
        update WAGES set JXW = #{Jwx} where JXW = 0;
    </update>
    <update id="updateNewWagesAllowance" parameterType="java.lang.Double">
        update WAGES set ALLOWANCE = #{Allowance} where ALLOWANCE = 0;
    </update>
    <update id="updateNewWagesPostWage">
        update WAGES b left join
        (select EMPLOYEE_ID,POSITION_BASE_PAY from EMPLOYEE,POSITIONS where EMPLOYEE.POSITION_ID = POSITIONS.POSITION_ID) as a
        on b.EMPLOYEE_ID = a.EMPLOYEE_ID
        set b.post_wage = a.POSITION_BASE_PAY
        where b.EMPLOYEE_ID = a.EMPLOYEE_ID;
    </update>
    <update id="updateNewWagesInsurance" parameterType="java.lang.String">
        update WAGES b left join
        (select employee_id,base_pay+post_wage+jxw+allowance+bouns-penalty total from WAGES where release_time = #{time}) as a
        on b.EMPLOYEE_ID = a.EMPLOYEE_ID
        set b.E_INSURANCE = a.total*0.08,b.I_INSURANCE = a.total*0.02,b.U_INSURANCE = a.total*0.005,b.W_INSURANCE = a.total*0.002,b.M_INSURANCE = a.total*0.01,
        b.HOUSING_FUND = a.total*0.08
        where b.EMPLOYEE_ID = a.EMPLOYEE_ID;
    </update>
    <update id="updateNewWagesCold1" parameterType="java.lang.String">
        update WAGES b left join
        (select employee_id,base_pay+post_wage+jxw+allowance+bouns-penalty total from WAGES where release_time = #{time}) as a
        on b.EMPLOYEE_ID = a.EMPLOYEE_ID
        set IIT_FEELS_COLD = 0
        where b.EMPLOYEE_ID = a.EMPLOYEE_ID
        and a.total between 0 and 5000;
    </update>
    <update id="updateNewWagesCold2" parameterType="java.lang.String">
        update WAGES b left join
        (select employee_id,base_pay+post_wage+jxw+allowance+bouns-penalty total from WAGES where release_time = #{time}) as a
        on b.EMPLOYEE_ID = a.EMPLOYEE_ID
        set IIT_FEELS_COLD = (a.total-5000)*0.03
        where b.EMPLOYEE_ID = a.EMPLOYEE_ID
        and a.total between 5001 and 8000;
    </update>
    <update id="updateNewWagesCold3" parameterType="java.lang.String">
        update WAGES b left join
        (select employee_id,base_pay+post_wage+jxw+allowance+bouns-penalty total from WAGES where release_time = #{time}) as a
        on b.EMPLOYEE_ID = a.EMPLOYEE_ID
        set IIT_FEELS_COLD = (a.total-5000)*0.1
        where b.EMPLOYEE_ID = a.EMPLOYEE_ID
        and a.total between 8001 and 17000;
    </update>
    <update id="updateNewWagesCold4" parameterType="java.lang.String">
        update WAGES b left join
        (select employee_id,base_pay+post_wage+jxw+allowance+bouns-penalty total from WAGES where release_time = #{time}) as a
        on b.EMPLOYEE_ID = a.EMPLOYEE_ID
        set IIT_FEELS_COLD = (a.total-5000)*0.2
        where b.EMPLOYEE_ID = a.EMPLOYEE_ID
        and a.total between 17001 and 30000;
    </update>
    <update id="updateNewWagesDeductrdTax" parameterType="java.lang.String">
        update WAGES b left join
        (select employee_id,base_pay+post_wage+jxw+allowance+bouns-penalty
        -E_INSURANCE-I_INSURANCE-U_INSURANCE-W_INSURANCE-M_INSURANCE-HOUSING_FUND-IIT_FEELS_COLD total
        from WAGES where release_time = #{time}) as a
        on b.EMPLOYEE_ID = a.EMPLOYEE_ID
        set WAGE_DEDUCTED_TAX = a.total
        where b.EMPLOYEE_ID = a.EMPLOYEE_ID;
    </update>



    <update id="calculateWageById1" parameterType="java.lang.Integer">
        update WAGES b left join
        (select employee_id,base_pay+post_wage+jxw+allowance+bouns-penalty total from WAGES where WAGES_ID = #{wagesId}) as a
        on b.EMPLOYEE_ID = a.EMPLOYEE_ID
        set b.E_INSURANCE = a.total*0.08,b.I_INSURANCE = a.total*0.02,b.U_INSURANCE = a.total*0.005,b.W_INSURANCE = a.total*0.002,b.M_INSURANCE = a.total*0.01,
        b.HOUSING_FUND = a.total*0.08
        where b.EMPLOYEE_ID = a.EMPLOYEE_ID;
    </update>
    <update id="calculateWageById2" parameterType="java.lang.Integer">
        update WAGES b left join
        (select employee_id,base_pay+post_wage+jxw+allowance+bouns-penalty total from WAGES where WAGES_ID = #{wagesId}) as a
        on b.EMPLOYEE_ID = a.EMPLOYEE_ID
        set IIT_FEELS_COLD = 0
        where b.EMPLOYEE_ID = a.EMPLOYEE_ID
        and a.total between 0 and 5000;
    </update>
    <update id="calculateWageById3" parameterType="java.lang.Integer">
        update WAGES b left join
        (select employee_id,base_pay+post_wage+jxw+allowance+bouns-penalty total from WAGES where WAGES_ID = #{wagesId}) as a
        on b.EMPLOYEE_ID = a.EMPLOYEE_ID
        set IIT_FEELS_COLD = (a.total-5000)*0.03
        where b.EMPLOYEE_ID = a.EMPLOYEE_ID
        and a.total between 5001 and 8000;
    </update>
    <update id="calculateWageById4" parameterType="java.lang.Integer">
        update WAGES b left join
        (select employee_id,base_pay+post_wage+jxw+allowance+bouns-penalty total from WAGES where release_time = WAGES_ID = #{wagesId}) as a
        on b.EMPLOYEE_ID = a.EMPLOYEE_ID
        set IIT_FEELS_COLD = (a.total-5000)*0.1
        where b.EMPLOYEE_ID = a.EMPLOYEE_ID
        and a.total between 8001 and 17000;
    </update>
    <update id="calculateWageById5" parameterType="java.lang.Integer">
        update WAGES b left join
        (select employee_id,base_pay+post_wage+jxw+allowance+bouns-penalty total from WAGES where release_time = WAGES_ID = #{wagesId}) as a
        on b.EMPLOYEE_ID = a.EMPLOYEE_ID
        set IIT_FEELS_COLD = (a.total-5000)*0.2
        where b.EMPLOYEE_ID = a.EMPLOYEE_ID
        and a.total between 17001 and 30000;
    </update>
    <update id="calculateWageById6" parameterType="java.lang.Integer">
        update WAGES b left join
        (select employee_id,base_pay+post_wage+jxw+allowance+bouns-penalty
        -E_INSURANCE-I_INSURANCE-U_INSURANCE-W_INSURANCE-M_INSURANCE-HOUSING_FUND-IIT_FEELS_COLD total
        from WAGES where WAGES_ID = #{wagesId}) as a
        on b.EMPLOYEE_ID = a.EMPLOYEE_ID
        set WAGE_DEDUCTED_TAX = a.total
        where b.EMPLOYEE_ID = a.EMPLOYEE_ID;
    </update>
</mapper>